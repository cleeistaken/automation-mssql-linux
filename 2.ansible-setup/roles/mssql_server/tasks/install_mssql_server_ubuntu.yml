---
- name: Add Microsoft keys to apt
  ansible.builtin.apt_key:
    url: https://packages.microsoft.com/keys/microsoft.asc

# https://packages.microsoft.com/config/ubuntu/20.04/mssql-server-2019.list
# 20.04 deb [arch=amd64,armhf,arm64] https://packages.microsoft.com/ubuntu/20.04/mssql-server-2019 focal main
# 18.04 deb [arch=amd64,arm64,armhf] https://packages.microsoft.com/ubuntu/18.04/mssql-server-2019 bionic main
# 16.04 deb [arch=amd64,arm64,armhf] https://packages.microsoft.com/ubuntu/16.04/mssql-server-2019 xenial main
- name: Add Microsoft Prod repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64,armhf,arm64] https://packages.microsoft.com/ubuntu/{{ ansible_distribution_version }}/prod {{ ansible_distribution_release }} main"
    state: present
    update_cache: yes

# https://packages.microsoft.com/config/ubuntu/20.04/mssql-server-2019.list
# 20.04 deb [arch=amd64,armhf,arm64] https://packages.microsoft.com/ubuntu/20.04/mssql-server-2019 focal main
# 18.04 deb [arch=amd64,arm64,armhf] https://packages.microsoft.com/ubuntu/18.04/mssql-server-2019 bionic main
# 16.04 deb [arch=amd64,arm64,armhf] https://packages.microsoft.com/ubuntu/16.04/mssql-server-2019 xenial main
- name: Add Microsoft SQL Server repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64,armhf,arm64] https://packages.microsoft.com/ubuntu/{{ ansible_distribution_version }}/mssql-server-2019 {{ ansible_distribution_release }} main"
    state: present
    update_cache: yes

- name: Install MSSQL Server
  apt:
    name:
      - mssql-server
    state: present

- name: Stop MSSQL Server
  ansible.builtin.service:
    name: mssql-server
    state: stopped

- name: Accept MSSQL EULA
  command: "{{ mssql_bin_path }}/mssql-conf -n setup accept-eula"
  environment:
    MSSQL_SA_PASSWORD: "{{ vars.MSSQL_SA_PASSWORD }}"
    MSSQL_PID: "{{ vars.MSSQL_PID }}"

- name: Start and enable MSSQL Server
  ansible.builtin.service:
    name: mssql-server
    state: started
    enabled: yes

- name: Wait for MSSQL to start
  pause:
    seconds: 15

- name: Install MSSQL tools and ODBC
  apt:
    name:
      - mssql-tools
      - unixodbc-dev
    state: present
  environment:
    ACCEPT_EULA: "{{ vars.ACCEPT_EULA }}"

- name: "Add {{ mssql_bin_path }} to path"
  ansible.builtin.lineinfile:
    dest=/etc/environment
    state=present
    backrefs=yes
    regexp="'PATH=(["]*)((?!.*?{{ mssql_bin_path }}).*?)(["]*)$'"
    line="PATH=\1\2:{{mssql_bin_path}}\3"

- name: add /opt/mssql-tools/bin to path
  ansible.builtin.lineinfile:
    dest=/etc/environment
    state=present
    backrefs=yes
    regexp='PATH=(["]*)((?!.*?/opt/mssql-tools/bin).*?)(["]*)$'
    line="PATH=\1\2:/opt/mssql-tools/bin\3"

- name: Install MSSQL Agent
  apt:
    name:
      - mssql-server-agent
    state: present
  when: vars.SQL_INSTALL_AGENT|upper == 'Y'

- name: Install MSSQL HA
  apt:
    name:
      - mssql-server-ha
    state: present
  when: vars.SQL_INSTALL_HA|upper == 'Y'

- name: Install MSSQL Full Text Search
  apt:
    name:
      - mssql-server-fts
    state: present
  when: vars.SQL_INSTALL_FULLTEXT|upper == 'Y'

- name: Install MSSQL Integration Service
  apt:
    name:
      - mssql-server-is
    state: present
  when: vars.SQL_INSTALL_INTG_SVC|upper == 'Y'

#- name: Install MSSQL Server HA Pacemaker
#  apt:
#    name:
#      - pacemaker
#      - pcs
#      - fence-agents
#      - resource-agents
#    state: present
#  when: SQL_INSTALL_HA_Pace|upper == 'Y'

#- name: Create MSSQL user account for Pacemaker
#  command: "{{ mssql_tools_bin_path }}/sqlcmd -s localhost -U SA -P '{{ vars.MSSQL_SA_PASSWORD }}' -Q \"CREATE LOGIN [{{ SQL_Pace_USER }}] WITH PASSWORD=N'{{ SQL_Pace_USER_PASSWORD }}', DEFAULT_DATABASE=[master], CHECK_EXPIRATION=ON, CHECK_POLICY=ON; ALTER SERVER ROLE [sysadmin] ADD MEMBER [{{ SQL_Pace_USER }}]\""
#  register: result
#  when: SQL_INSTALL_HA_Pace|upper == 'Y'

#- name: print result
#  ansible.builtin.debug:
#    var: result.stdout

- name: Configure UFW for TCP/1433
  community.general.ufw:
    rule: allow
    port: 1433
    proto: tcp
    state: reloaded

- name: Setting trace flags 1204 and 1222
  command: "{{ mssql_bin_path }}/mssql-conf traceflag 1204 1222 on"
  register: result

- name: print result
  ansible.builtin.debug:
    var: result.stdout

- name: Restart the MSSQL Server
  ansible.builtin.service:
    name: mssql-server
    state: restarted

- name: Get MSSQL version
  command: "{{ mssql_tools_bin_path }}/sqlcmd -S localhost -U SA -P '{{ vars.MSSQL_SA_PASSWORD }}' -Q \"SELECT @@VERSION\""
  retries: 5
  delay: 3
  register: result
  until: result.rc == 0

- name: print result
  ansible.builtin.debug:
    var: result.stdout

- name: "Creating user {{ SQL_INSTALL_USER }}"
  command: "{{ mssql_tools_bin_path }}/sqlcmd -s localhost -U SA -P '{{ vars.MSSQL_SA_PASSWORD }}' -Q \"CREATE LOGIN [{{ SQL_INSTALL_USER }}] WITH PASSWORD=N'{{ SQL_INSTALL_USER_PASSWORD }}', DEFAULT_DATABASE=[master], CHECK_EXPIRATION=ON, CHECK_POLICY=ON; ALTER SERVER ROLE [sysadmin] ADD MEMBER [{{ SQL_INSTALL_USER }}]\""
  register: result

