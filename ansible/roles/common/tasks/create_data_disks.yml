---
- name: Gather hardware facts
  setup:
    gather_subset:
      - 'hardware'

- name: Print parameters
  ansible.builtin.debug:
    msg: |
      Filesystem: {{ system_data_disk_filesystem | default(default_system_mount_data_disks_filesystem) }}
      Mount paths: {{ system_mount_data_disk_mount_paths | default(default_system_mount_data_disk_mount_paths) }}
      Mount options: {{ system_mount_data_disk_mount_options | default(default_system_mount_data_disk_mount_options) }}

- name: Get disks (/dev/sd*) except sda (OS)
  set_fact:
    disks: "{{ disks|default([]) + [ '/dev/' ~ item ] }}"
  loop: "{{ hostvars[inventory_hostname].ansible_devices.keys() | map('regex_search', 'sd([b-z]+|[a-z]{2})') | select('string') | list | sort }}"

- name: List disks
  debug:
    msg: "Found disks: {{ disks | join(',') }}"

- name: Validate sufficent paths specified
  assert:
    that: disks | length <= (system_mount_data_disk_mount_paths | default(default_system_mount_data_disk_mount_paths)) | length
    fail_msg: "There are {{ disks | length }} data disks but {{ (system_mount_data_disk_mount_paths | default(default_system_mount_data_disk_mount_paths)) | length }} mount points specified"
    success_msg: "There are enough specified mount paths"

- name: Get currently mounted devices
  set_fact:
    mounted_devices: "{{ ansible_mounts | json_query('[].device') }}"

- name: List mounted devices
  debug:
    msg: "Currently mounted disks:\n{{ mounted_devices | join('\n') }}"

- name: Partition disks
  parted:
    device: "{{ item }}"
    number: 1
    state: present
  when: disks is defined and item not in mounted_devices
  loop: "{{ disks }}"

- name: Create filesystem
  filesystem:
    fstype: "{{ system_mount_data_disks_filesystem | default(default_system_mount_data_disks_filesystem) }}"
    dev: "{{ item }}1"
  when: disks is defined and item not in mounted_devices
  loop: "{{ disks }}"

- name: Mount data volumes using specified mount points
  mount:
    src: "{{ item }}1"
    path: "{{ (system_mount_data_disk_mount_paths | default(default_system_mount_data_disk_mount_paths))[index] }}"
    opts: "{{ system_mount_data_disk_mount_options | default(default_system_mount_data_disk_mount_options) }}"
    state: mounted
    fstype: "{{ system_mount_data_disks_filesystem | default(default_system_mount_data_disks_filesystem) }}"
  when: (disks is defined and item not in mounted_devices) and (system_mount_data_disk_mount_paths | default(default_system_mount_data_disk_mount_paths)) is defined
  loop: "{{ disks }}"
  loop_control:
    index_var: index
