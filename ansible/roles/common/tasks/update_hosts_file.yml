---
- name: Check if hosts file exists
  ansible.builtin.stat:
    path: "{{ system_hosts_file | default(DEFAULT_SYSTEM_HOSTS_FILE) }}"
    get_md5: no
  register: stat_hosts_file

- name: Ensure the hosts file is valid
  ansible.builtin.assert:
    that:
    - stat_hosts_file.stat.exists
    - stat_hosts_file.stat.isreg
    fail_msg: "Hosts file '{{ system_hosts_file | default(DEFAULT_SYSTEM_HOSTS_FILE) }}' does not appear valid "

- name: Update hosts file with cluster nodes
  lineinfile: dest="{{ system_hosts_file | default(DEFAULT_SYSTEM_HOSTS_FILE) }}"
    state=present
    dest="{{ system_hosts_file | default(DEFAULT_SYSTEM_HOSTS_FILE) }}"
    regexp='.*{{ item }}$' line="{{ \"%-13s\" | format(hostvars[item].ansible_default_ipv4.address) }}\t{{ hostvars[item].ansible_fqdn }} {{ hostvars[item].ansible_hostname }}"
  when: hostvars[item].ansible_default_ipv4.address is defined
  loop: "{{ system_hosts_group | default(DEFAULT_SYSTEM_HOSTS_GROUP) }}"

- name: Comment out entries
  replace:
    dest: "{{ system_hosts_file | default(DEFAULT_SYSTEM_HOSTS_FILE) }}"
    regexp: '^{{item}}'
    replace: '#{{item}}'
  loop: "{{ system_hosts_file_disable_entries | default(DEFAULT_SYSTEM_HOSTS_FILE_DISABLE_ENTRIES) }}"
