---
- name: Print distribution
  ansible.builtin.debug:
    msg: "The system distribution is: {{ ansible_distribution }} {{ ansible_distribution_version }}"

- name: Validate distribution
  ansible.builtin.assert:
    that:
      - ansible_distribution == 'Ubuntu' and (ansible_distribution_version == '16.04' or ansible_distribution_version == '20.04')
    fail_msg: "Unsupported distribution version: {{ ansible_distribution }} {{ ansible_distribution_version }}"
    success_msg: "Supported distribution and version"

- name: Validate MSSQL EULA
  ansible.builtin.assert:
    that:
      - mssql_accept_eula is defined and
        mssql_accept_eula
    fail_msg: "Cannot install if the MSSQL EULA is not accepted: 'mssql_accept_eula'"
    success_msg: "EULA Accepted"

- name: Validate MSSQL PID
  ansible.builtin.assert:
    that:
      - mssql_pid is defined
      - mssql_pid | lower == 'evaluation' or
        mssql_pid | lower == 'developer' or
        mssql_pid | lower == 'express' or
        mssql_pid | lower == 'web' or
        mssql_pid | lower == 'standard' or
        mssql_pid | lower == 'enterprise' or
        mssql_pid | length > 12 # probably a decent test for a serial?
    fail_msg: "Cannot install if the MSSQL Product ID is not accepted: 'mssql_pid'"
    success_msg: "Using MSSQL product id: {{ mssql_pid }}"

- name: Validate PCS VIP
  ansible.builtin.assert:
    that:
      - mssql_pcs_cluster_vip_cidr is defined and 
        mssql_pcs_cluster_vip_cidr | ipaddr('host/prefix') | length > 0
    fail_msg: "Cannot install if the PCS Cluster VIP is not configured and valid: 'mssql_pcs_cluster_vip_cidr'"
    success_msg: "PCS Cluster VIP: {{ mssql_pcs_cluster_vip_cidr }}"

#
# The password must be at least 8 characters long and contain characters
# from three of the following four sets: Uppercase letters, Lowercase letters,
# Base 10 digits, and Symbols.
#
# The current test is not sufficient.
#
- name: Validate SA password
  ansible.builtin.assert:
    that:
      - mssql_sa_password | default(default_mssql_sa_password) is defined
      - mssql_sa_password | default(default_mssql_sa_password) | length >= 8
    fail_msg: "The specified SA password does not meet SQL Server password policy requirements"
    success_msg: "The SA password is valid"

#
# The password must be at least 8 characters long and contain characters
# from three of the following four sets: Uppercase letters, Lowercase letters,
# Base 10 digits, and Symbols.
#
# The current test is not sufficient.
#
- name: Validate MSSQL pacemaker user password
  ansible.builtin.assert:
    that:
      - mssql_pacemaker_password | default(default_mssql_pacemaker_password) is defined
      - mssql_pacemaker_password | default(default_mssql_pacemaker_password) | length >= 8
    fail_msg: "The specified password does not meet SQL Server password policy requirements"
    success_msg: "The pacemaker user password is valid"

- name: Install MSSQL Server (CentOS/RedHat)
  include_tasks: install_mssql_server_centos.yml
  when: ansible_distribution == 'CentOS' or
        ansible_distribution == 'RedHat'

- name: Install MSSQL Server (Debian/Ubuntu)
  include_tasks: install_mssql_server_ubuntu.yml
  when: ansible_distribution == 'Debian' or
        ansible_distribution == 'Ubuntu'

- name: Configure MSSQL Server
  include_tasks: configure_mssql.yml

- name: Generate MSSQL SSL certificate and configure endpoints
  include_tasks: configure_mssql_ssl_certificates.yml

- name: Configure Pacemaker on all nodes
  include_tasks: configure_pacemaker_all.yml

- name: Configure Pacemaker on the primary node
  include_tasks: configure_pacemaker_primary.yml
  when: inventory_hostname == play_hosts[0]

- name: Configure MSSQL Availability Group
  include_tasks: configure_mssql_ag.yml

- name: Configure Pacemaker AG resource on the primary node
  include_tasks: configure_pacemaker_ag.yml
  when: inventory_hostname == play_hosts[0]

